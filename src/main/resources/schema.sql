CREATE TABLE IF NOT EXISTS users (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  email varchar,
  login varchar,
  name varchar,
  birthday date
);

CREATE TABLE IF NOT EXISTS ratings (
  id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar,
  CONSTRAINT Uq_ratings UNIQUE(name)
);

CREATE TABLE IF NOT EXISTS genres (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar,
  CONSTRAINT Uq_genres UNIQUE(name)
);

CREATE TABLE IF NOT EXISTS films (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar,
  description varchar,
  releaseDate date,
  duration int,
  rating_id int,
  CONSTRAINT rating_ids FOREIGN KEY (rating_id) REFERENCES ratings (id)
);

CREATE TABLE IF NOT EXISTS films_genres (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  film_id bigint,
  genre_id bigint,
  CONSTRAINT films_ids FOREIGN KEY (film_id) REFERENCES films (id),
  CONSTRAINT genres_ids FOREIGN KEY (genre_id) REFERENCES genres (id),
  CONSTRAINT Uq_films_genres UNIQUE(film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS friendships (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  friend1_id bigint,
  friend2_id bigint,
  CONSTRAINT friendships1 FOREIGN KEY (friend1_id) REFERENCES users (id),
  CONSTRAINT friendships2 FOREIGN KEY (friend2_id) REFERENCES users (id),
  CONSTRAINT Uq_friends UNIQUE(friend1_id, friend2_id)
);

CREATE TABLE IF NOT EXISTS likes (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  film_id bigint,
  user_id bigint,
  CONSTRAINT likes_to_user FOREIGN KEY (user_id) REFERENCES users (id),
  CONSTRAINT likes_to_film FOREIGN KEY (film_id) REFERENCES films (id)
);
